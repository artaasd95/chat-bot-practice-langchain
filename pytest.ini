[tool:pytest]
# Pytest configuration file

# Test discovery
python_files = test_*.py *_test.py
python_classes = Test*
python_functions = test_*

# Test paths
testpaths = tests

# Minimum version
minversion = 7.0

# Add options
addopts = 
    --strict-markers
    --strict-config
    --verbose
    --tb=short
    --color=yes
    --durations=10
    --showlocals
    --disable-warnings

# Markers
markers =
    unit: Unit tests
    integration: Integration tests
    e2e: End-to-end tests
    slow: Slow running tests
    fast: Fast running tests
    auth: Authentication related tests
    chat: Chat functionality tests
    admin: Admin functionality tests
    api: API endpoint tests
    graph: LangGraph and AI component tests
    services: Core services tests
    database: Database related tests
    llm: LLM service tests
    websocket: WebSocket tests
    security: Security related tests
    performance: Performance tests

# Async support
asyncio_mode = auto

# Coverage
# Note: Coverage settings can also be in pyproject.toml or .coveragerc
# These are fallback settings
# --cov=app
# --cov-report=term-missing
# --cov-report=html:htmlcov
# --cov-report=xml
# --cov-fail-under=80

# Logging
log_cli = true
log_cli_level = INFO
log_cli_format = %(asctime)s [%(levelname)8s] %(name)s: %(message)s
log_cli_date_format = %Y-%m-%d %H:%M:%S

# Warnings
filterwarnings =
    ignore::DeprecationWarning
    ignore::PendingDeprecationWarning
    ignore::UserWarning:langchain.*
    ignore::UserWarning:openai.*
    ignore::UserWarning:httpx.*

# Test timeout (in seconds)
timeout = 300

# Parallel execution settings (for pytest-xdist)
# -n auto  # Use all available CPUs
# -n 4     # Use 4 workers

# Environment variables for testing
env =
    TESTING = true
    DATABASE_URL = sqlite+aiosqlite:///:memory:
    SECRET_KEY = test-secret-key-for-testing-only
    ALGORITHM = HS256
    ACCESS_TOKEN_EXPIRE_MINUTES = 30
    REFRESH_TOKEN_EXPIRE_DAYS = 7
    LLM_PROVIDER = openai
    OPENAI_API_KEY = test-openai-key
    DEEPSEEK_API_KEY = test-deepseek-key
    REDIS_URL = redis://localhost:6379/1
    CORS_ORIGINS = ["http://localhost:3000"]