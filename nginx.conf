events {
    worker_connections 1024;
}

http {
    upstream auth_service {
        server auth:8001;
    }

    upstream chat_service {
        server chat:8002;
    }

    upstream admin_service {
        server admin:8003;
    }

    # Rate limiting
    limit_req_zone $binary_remote_addr zone=auth_limit:10m rate=10r/m;
    limit_req_zone $binary_remote_addr zone=api_limit:10m rate=100r/m;

    server {
        listen 80;
        server_name localhost;

        # Security headers
        add_header X-Frame-Options DENY;
        add_header X-Content-Type-Options nosniff;
        add_header X-XSS-Protection "1; mode=block";
        add_header Strict-Transport-Security "max-age=31536000; includeSubDomains";

        # CORS headers
        add_header Access-Control-Allow-Origin *;
        add_header Access-Control-Allow-Methods "GET, POST, PUT, DELETE, OPTIONS";
        add_header Access-Control-Allow-Headers "Origin, X-Requested-With, Content-Type, Accept, Authorization";

        # Handle preflight requests
        if ($request_method = 'OPTIONS') {
            add_header Access-Control-Allow-Origin *;
            add_header Access-Control-Allow-Methods "GET, POST, PUT, DELETE, OPTIONS";
            add_header Access-Control-Allow-Headers "Origin, X-Requested-With, Content-Type, Accept, Authorization";
            add_header Access-Control-Max-Age 1728000;
            add_header Content-Type 'text/plain; charset=utf-8';
            add_header Content-Length 0;
            return 204;
        }

        # Health check endpoint
        location /health {
            access_log off;
            return 200 "healthy\n";
            add_header Content-Type text/plain;
        }

        # Authentication service routes
        location /api/v1/auth {
            limit_req zone=auth_limit burst=5 nodelay;
            proxy_pass http://auth_service;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_connect_timeout 30s;
            proxy_send_timeout 30s;
            proxy_read_timeout 30s;
        }

        # Chat service routes
        location /api/v1/chat {
            limit_req zone=api_limit burst=20 nodelay;
            proxy_pass http://chat_service;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_connect_timeout 60s;
            proxy_send_timeout 60s;
            proxy_read_timeout 300s;  # Longer timeout for chat responses
        }

        # Webhook routes (chat service)
        location /webhook {
            limit_req zone=api_limit burst=10 nodelay;
            proxy_pass http://chat_service;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_connect_timeout 30s;
            proxy_send_timeout 30s;
            proxy_read_timeout 60s;
        }

        # Admin service routes
        location /api/v1/admin {
            limit_req zone=api_limit burst=10 nodelay;
            proxy_pass http://admin_service;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_connect_timeout 30s;
            proxy_send_timeout 30s;
            proxy_read_timeout 30s;
        }

        # Service-specific health checks
        location /auth/health {
            proxy_pass http://auth_service/health;
            access_log off;
        }

        location /chat/health {
            proxy_pass http://chat_service/health;
            access_log off;
        }

        location /admin/health {
            proxy_pass http://admin_service/health;
            access_log off;
        }

        # Default route - API documentation
        location / {
            return 200 '{"message": "Chat Bot API Gateway", "services": {"auth": "/api/v1/auth", "chat": "/api/v1/chat", "admin": "/api/v1/admin"}, "docs": {"auth": "/api/v1/auth/docs", "chat": "/api/v1/chat/docs", "admin": "/api/v1/admin/docs"}}';
            add_header Content-Type application/json;
        }

        # Error pages
        error_page 404 /404.html;
        error_page 500 502 503 504 /50x.html;

        location = /404.html {
            return 404 '{"error": "Not Found", "message": "The requested resource was not found"}';
            add_header Content-Type application/json;
        }

        location = /50x.html {
            return 500 '{"error": "Internal Server Error", "message": "Something went wrong"}';
            add_header Content-Type application/json;
        }
    }
}